html, body {
    min-height: 100%;
}

table {
    border-collapse: collapse;
}

[data-size="9"] tr > :nth-child(3n) {
    border-right: 3px solid black;
}

[data-size="9"] tr > :nth-child(3n+1) {
    border-left: 3px solid black;
}

table[data-size="9"] > :nth-child(3n) {
    border-bottom: 3px solid black;
}

table[data-size="9"] > :nth-child(3n+1) {
    border-top: 3px solid black;
}

[data-size="4"] tr > :nth-child(2n) {
    border-right: 3px solid black;
}

[data-size="4"] tr > :nth-child(2n+1) {
    border-left: 3px solid black;
}

table[data-size="4"] > :nth-child(2n) {
    border-bottom: 3px solid black;
}

table[data-size="4"] > :nth-child(2n+1) {
    border-top: 3px solid black;
}

[data-size="6"] tr > :nth-child(3n) {
    border-right: 3px solid black;
}

[data-size="6"] tr > :nth-child(3n+1) {
    border-left: 3px solid black;
}

table[data-size="6"] > :nth-child(2n) {
    border-bottom: 3px solid black;
}

table[data-size="6"] > :nth-child(2n+1) {
    border-top: 3px solid black;
}

[data-size="12"] tr > :nth-child(4n) {
    border-right: 3px solid black;
}

[data-size="12"] tr > :nth-child(4n+1) {
    border-left: 3px solid black;
}

table[data-size="12"] > :nth-child(3n) {
    border-bottom: 3px solid black;
}

table[data-size="12"] > :nth-child(3n+1) {
    border-top: 3px solid black;
}
[data-size="16"] tr > :nth-child(4n) {
    border-right: 3px solid black;
}

[data-size="16"] tr > :nth-child(4n+1) {
    border-left: 3px solid black;
}

table[data-size="16"] > :nth-child(4n) {
    border-bottom: 3px solid black;
}

table[data-size="16"] > :nth-child(4n+1) {
    border-top: 3px solid black;
}


td {
    border: 1px solid black;
    width: 9vmin;
    height: 9vmin;
    text-align: center;
    font-size: 7vmin;
}

[data-size="4"] td {
    width: 14vmin;
    height: 14vmin;
}

.options {
    display: grid;
    font-size: 1rem;
}

[data-size="9"] .options {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
}

[data-size="4"] .options {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
}

[data-size="6"] .options {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
}

[data-size="12"] .options {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 1fr);
}

[data-size="16"] .options {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
}

.options * {
    cursor: crosshair;
}

.done {
    background-color: lightgreen;
}

.initial {
    background-color: green;
}

.hint {
    background-color: turquoise;
}

.new {
    background-color: yellow;
}

.colour1 {
    background-color: red;
}

.colour2 {
    background-color: blue;
}

.colour3 {
    background-color: orange;
}

.colour4 {
    background-color: purple;
}

.colour5 {
    background-color: pink;
}

.colour6 {
    background-color: white;
}

.diagonalContainer {
    grid-area: sudoku;
    width: 100%;
    height: 100%;
}

.hide {
    display: none;
}

line {
    stroke: black;
    opacity: 0.1;
    stroke-width: 1;
}

body {
    display: grid;
    grid-template-areas: 
        'click sudoku control grids'
        '.     status .       .';
    justify-content:  center;
    align-content: center;
    grid-gap: 10px;
}

#grids {
    grid-area: grids;
    display: flex;
    flex-direction: column;
}

#click {
    grid-area: click;
    display: flex;
    flex-direction: column;
    width: 9em;
    justify-content:  center;
    align-content: center;
}

.clickContainer {
    display: flex;
    justify-content:  center;
    align-content: center;
    align-items: center;
    margin: 1em;
    width: 5em;
}

#control {
    grid-area: control;
    display: flex;
    flex-direction: column;
}

#status {
    grid-area: status;
}

#sudoku {
    grid-area: sudoku;
}

.lastControlItem {
    margin-bottom: auto;
}